# -*- coding: utf-8 -*-
"""Sentiment Analysis Deploy Streamlit.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1IaYBi7r2Isk0MtN_gd06I8p6oK5v_I2Y
"""

!pip install streamlit
!pip install pyngrok

# Commented out IPython magic to ensure Python compatibility.
# %%writefile app.py
# import streamlit as st
# st.title("Machine Learning Model")
# st.subheader("This is a Review Classifier. Try it Out!")
# 
# 
# 
# 
# import pandas as pd
# import numpy as np
# import seaborn as sns
# 
# ## Import Dataset
# 
# df = pd.read_csv('Amazon Review.csv')
# df.head()
# 
# ## Setting Input and Output
# df['Text'] = df['Text'].fillna(' ')
# X = df.iloc[:,1].values
# 
# y = df.iloc[:,0].values
# 
# 
# ## Preprocessing for Improvement
# 
# #Try 1- Creating one column in dataframe such that rating from 0-2 considered as 0 whereas 3-5 as 1
# 
# 
# df['Rating'].value_counts()
# 
# df["sentiment"] = 1
# 
# df.head()
# 
# df.loc[df['Rating']<=2, 'sentiment'] = 0
# df.loc[df['Rating']==5, 'sentiment'] = 2
# 
# df['sentiment'].value_counts()
# 
# y = df.iloc[:,2].values
# 
# 
# ## Splitting data into Train and Test set
# 
# from sklearn.model_selection import train_test_split
# X_train,X_test,y_train,y_test = train_test_split(X,y,test_size=0.2,random_state=0)
# print(X_train.shape)
# print(y_test.shape)
# 
# ## Creating Pipeline
# 
# from sklearn.pipeline import Pipeline
# from sklearn.feature_extraction.text import TfidfVectorizer
# from sklearn.naive_bayes import MultinomialNB
# from wordcloud import WordCloud, STOPWORDS
# 
# #text_model = Pipeline([('tfidf',TfidfVectorizer(binary = False,max_df=0.611111111111111,norm = 'l2')),('model',MultinomialNB(alpha = 0.058,fit_prior=True))])
# text_model = Pipeline([('tfidf',TfidfVectorizer(binary = False,max_df=0.611111111111111,norm = 'l2')),('model',MultinomialNB(alpha = 0.058,fit_prior=True))])
# 
# 
# 
# text_model.fit(X_train,y_train)
# 
# 
# counts = np.bincount(y_train)
# v = np.argmax(counts)
# st.subheader("Your Review :  ")
# #df1 = user_input()
# user_input = st.text_area("\n", "This is my default review!!!")
# '\n'
# 
# #st.write(df1)
# y_pred = text_model.predict([user_input])
# if(y_pred == 2):
#   st.write('Positive Review')
# elif (y_pred == 1):
#   st.write('Negative - Neutral Review')
# else:
#   st.write('Negative Review')

from pyngrok import ngrok
ngrok.connect(port='8501')

!streamlit run app.py

